{"version":3,"sources":["assets/noPosterSmall.png","api.js","components/Loader.js","components/Section.js","components/Poster.js","components/Message.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/Detail/DetailTab.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","components/Router.js","components/Header.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","role","aria-label","Title","span","Grid","Section","title","children","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","Text","color","Message","text","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","HomeContainer","state","useState","setState","useEffect","a","data","results","getData","useHooks","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","target","Tabs","Content","UL","ul","LI","li","Item","Iframe","iframe","Wrap","img","Label","LabelName","ImageS","url","Videos","videos","video","name","src","Production","companies","countries","company","logo_path","alt","country","index","iso_3166_1","Seasons","seasons","season","DetailTab","tab","setTabs","useCallback","onClick","Backdrop","bgImage","Cover","Data","h3","ItemContainer","Divider","Overview","p","IMDB","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","imdb_id","href","overview","production_companies","production_countries","DetailContainer","useLocation","pathname","includes","useParams","history","useHistory","isNaN","Number","push","Router","path","exact","component","Home","TV","Search","Detail","from","Header","header","List","current","SLink","Link","withRouter","location","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbf3542c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nconst params = {\r\n  params: {\r\n    api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n    language: \"en-US\",\r\n  },\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\", params),\r\n  upcoming: () => api.get(\"movie/upcoming\", params),\r\n  popular: () => api.get(\"movie/popular\", params),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n        language: \"en-US\",\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n        language: \"en-US\",\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\", params),\r\n  popular: () => api.get(\"tv/popular\", params),\r\n  airingToday: () => api.get(\"tv/airing_today\", params),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n        language: \"en-US\",\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        api_key: \"1a88ef42580a45520eead93aeb5a5933\",\r\n        language: \"en-US\",\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Section from \"../../components/Section\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Daeun-movie</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Daeun-movie</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { moviesApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nfunction useHooks() {\r\n  const [state, setState] = useState({\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const {\r\n          data: { results: nowPlaying },\r\n        } = await moviesApi.nowPlaying();\r\n        const {\r\n          data: { results: upcoming },\r\n        } = await moviesApi.upcoming();\r\n        const {\r\n          data: { results: popular },\r\n        } = await moviesApi.popular();\r\n        setState({\r\n          nowPlaying,\r\n          upcoming,\r\n          popular,\r\n          loading: false,\r\n        });\r\n      } catch {\r\n        setState({\r\n          error: \"Can't find movie information.\",\r\n          loading: false,\r\n        });\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return state;\r\n}\r\n\r\nconst HomeContainer = () => {\r\n  const state = useHooks();\r\n  return <HomePresenter {...state} />;\r\n};\r\n\r\nexport default HomeContainer;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Section from \"../../components/Section\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Daeun-movie</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import React, { useState } from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { useEffect } from \"react\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nfunction useHooks() {\r\n  const [state, setState] = useState({\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const {\r\n          data: { results: topRated },\r\n        } = await tvApi.topRated();\r\n        const {\r\n          data: { results: popular },\r\n        } = await tvApi.popular();\r\n        const {\r\n          data: { results: airingToday },\r\n        } = await tvApi.airingToday();\r\n        setState({ topRated, popular, airingToday, loading: false });\r\n      } catch {\r\n        setState({\r\n          error: \"Can't find TV information.\",\r\n          loading: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return state;\r\n}\r\n\r\nfunction TVContainer() {\r\n  const state = useHooks();\r\n  console.log(state);\r\n  return <TVPresenter {...state} />;\r\n}\r\n\r\nexport default TVContainer;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Poster from \"../../components/Poster\";\r\nimport Section from \"../../components/Section\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction SearchPresenter({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Daeun-movie</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          value={searchTerm || \"\"}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date?.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n          {tvResults &&\r\n            movieResults &&\r\n            tvResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction SearchContainer() {\r\n  const [state, setState] = useState({\r\n    movieResults: null,\r\n    tvResults: null,\r\n    loading: false,\r\n    error: null,\r\n    searchTerm: \"\",\r\n  });\r\n\r\n  async function getData(searchTerm) {\r\n    if (searchTerm === \"\") {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      setState({\r\n        movieResults,\r\n        tvResults,\r\n        loading: false,\r\n      });\r\n    } catch {\r\n      setState({ error: \"Can't find results.\", loading: false });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = state;\r\n    if (searchTerm !== \"\") {\r\n      getData(searchTerm);\r\n    }\r\n  };\r\n\r\n  const updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setState({\r\n      ...state,\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(\"\");\r\n  }, []);\r\n\r\n  const { movieResults, tvResults, searchTerm, loading, error } = state;\r\n  console.log(state);\r\n  return (\r\n    <SearchPresenter\r\n      movieResults={movieResults}\r\n      tvResults={tvResults}\r\n      loading={loading}\r\n      error={error}\r\n      searchTerm={searchTerm}\r\n      handleSubmit={handleSubmit}\r\n      updateTerm={updateTerm}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchContainer;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tabs = styled.div`\r\n  opacity: 0.7;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: grey;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  height: 380px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst UL = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style: none;\r\n`;\r\nconst LI = styled.li`\r\n  background-color: grey;\r\n  opacity: 1;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  margin: 20px;\r\n`;\r\n\r\nconst Iframe = styled.iframe`\r\n  width: 300px;\r\n  height: 300px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 16pt;\r\n  color: black;\r\n  text-align: left;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 10px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n`;\r\nconst LabelName = styled.span``;\r\nconst ImageS = styled.img`\r\n  width: 200px;\r\n  height: 280px;\r\n`;\r\nconst url = \"https://image.tmdb.org/t/p/w200/\";\r\nconst youTubeUrl = \"https://www.youtube.com/embed/\";\r\n\r\nconst Videos = ({ videos }) => {\r\n  return (\r\n    <Content>\r\n      {videos.results !== null &&\r\n        videos.results.map((video) => (\r\n          <Item key={video.key}>\r\n            <Iframe\r\n              title={video.name}\r\n              src={`${youTubeUrl}${video.key}`}\r\n            ></Iframe>\r\n          </Item>\r\n        ))}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst Production = ({ companies, countries }) => {\r\n  return (\r\n    <Content>\r\n      <Item>\r\n        <Title>[Companies]</Title>\r\n        {companies !== null &&\r\n          companies.map((company) => (\r\n            <Wrap key={company.id}>\r\n              <Label>\r\n                {company.logo_path ? (\r\n                  <Image src={`${url}${company.logo_path}`} alt=\"img\" />\r\n                ) : (\r\n                  <Image\r\n                    src={require(\"../../assets/noPosterSmall.png\")}\r\n                    alt=\"img\"\r\n                  />\r\n                )}\r\n              </Label>\r\n              <LabelName>{company.name}</LabelName>\r\n            </Wrap>\r\n          ))}\r\n      </Item>\r\n\r\n      <Item>\r\n        <Title>[Countries]</Title>\r\n        {countries !== null &&\r\n          countries.map((country, index) => (\r\n            <Wrap key={index}>\r\n              <Label> {country.iso_3166_1}</Label>\r\n              <LabelName> {country.name} </LabelName>\r\n            </Wrap>\r\n          ))}\r\n      </Item>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst Seasons = ({ seasons }) => {\r\n  return (\r\n    <Content>\r\n      {seasons !== null &&\r\n        seasons.map((season) => (\r\n          <Item>\r\n            <div>\r\n              {season.poster_path ? (\r\n                <ImageS src={`${url}${season.poster_path}`} alt=\"img\" />\r\n              ) : (\r\n                <ImageS\r\n                  src={require(\"../../assets/noPosterSmall.png\")}\r\n                  alt=\"img\"\r\n                />\r\n              )}\r\n            </div>\r\n            <LabelName> {season.name} </LabelName>\r\n          </Item>\r\n        ))}\r\n    </Content>\r\n  );\r\n};\r\n\r\nfunction DetailTab({ videos, companies, countries, seasons }) {\r\n  const [tab, setTabs] = useState(0);\r\n  const onChange = useCallback((tab) => {\r\n    setTabs(tab);\r\n  }, []);\r\n  return (\r\n    <Tabs>\r\n      <UL>\r\n        {videos && <LI onClick={() => onChange(0)}>Videos</LI>}\r\n        {companies && <LI onClick={() => onChange(1)}>Production</LI>}\r\n        {seasons && <LI onClick={() => onChange(2)}>Seasons</LI>}\r\n      </UL>\r\n      {tab === 0 && <Videos videos={videos} />}\r\n      {tab === 1 && <Production companies={companies} countries={countries} />}\r\n      {tab === 2 && <Seasons seasons={seasons} />}\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default DetailTab;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../components/Loader\";\r\nimport DetailTab from \"./DetailTab\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst IMDB = styled.a`\r\n  background-color: yellow;\r\n  color: black;\r\n  padding: 3px;\r\n  font-weight: 600;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Daeun-movie</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Daeun-movie\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {/* {console.log(result.runtime)} */}\r\n              {result.runtime || result.runtime === 0\r\n                ? result.runtime\r\n                : result.episode_run_time[0]}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            {result.imdb_id && (\r\n              <IMDB\r\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                target=\"_BLANK\"\r\n              >\r\n                IMDB\r\n              </IMDB>\r\n            )}\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n          <DetailTab\r\n            videos={result.videos || null}\r\n            companies={result.production_companies || null}\r\n            countries={result.production_countries || null}\r\n            seasons={result.seasons || null}\r\n          />\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { useEffect } from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nfunction useHooks() {\r\n  const { pathname } = useLocation();\r\n  const isMovie = pathname.includes(\"/movie/\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    result: null,\r\n    error: null,\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      if (isNaN(Number(id))) {\r\n        return history.push(\"/\");\r\n      }\r\n      let result = null;\r\n      try {\r\n        if (isMovie) {\r\n          ({ data: result } = await moviesApi.movieDetail(Number(id)));\r\n        } else {\r\n          ({ data: result } = await tvApi.showDetail(Number(id)));\r\n        }\r\n        setState({ result, error: null, loading: false });\r\n      } catch {\r\n        setState({\r\n          result: null,\r\n          error: \"Can't find anything.\",\r\n          loading: false,\r\n        });\r\n      }\r\n    }\r\n    getData(id);\r\n  }, [id, history, isMovie]);\r\n\r\n  return state;\r\n}\r\nfunction DetailContainer() {\r\n  const state = useHooks();\r\n  return <DetailPresenter {...state} />;\r\n}\r\n\r\nexport default DetailContainer;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport Router from \"./Router\";\r\nimport Header from \"./Header\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Router />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}